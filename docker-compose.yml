version: "3.9"

services:
  # MSSQL Server
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - backend
    volumes:
      - mssql_data:/var/opt/mssql

  # RabbitMQ (с панелью управления)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Web UI
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # AuthService
  authservice:
    build:
      context: ./src/PS.FreeBookHub_Lite
      dockerfile: PS.FreeBookHub_Lite.AuthService.API/Dockerfile
    container_name: authservice
    ports:
      - "5000:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
    depends_on:
      mssql:
        condition: service_started
    networks:
      - backend

  # CartService
  cartservice:
    build:
      context: ./src/PS.FreeBookHub_Lite
      dockerfile: PS.FreeBookHub_Lite.CartService.API/Dockerfile
    container_name: cartservice
    ports:
      - "5001:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
    depends_on:
      mssql:
        condition: service_started
      catalogservice:
        condition: service_started
      orderservice:
        condition: service_started
    networks:
      - backend

  # CatalogService
  catalogservice:
    build:
      context: ./src/PS.FreeBookHub_Lite
      dockerfile: PS.FreeBookHub_Lite.CatalogService.API/Dockerfile
    container_name: catalogservice
    ports:
      - "5002:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
    depends_on:
      mssql:
        condition: service_started
    networks:
      - backend

  # OrderService
  orderservice:
    build:
      context: ./src/PS.FreeBookHub_Lite
      dockerfile: PS.FreeBookHub_Lite.OrderService.API/Dockerfile
    container_name: orderservice
    ports:
      - "5003:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
    depends_on:
      mssql:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      paymentservice:
        condition: service_started
    networks:
      - backend

  # PaymentService
  paymentservice:
    build:
      context: ./src/PS.FreeBookHub_Lite
      dockerfile: PS.FreeBookHub_Lite.PaymentService.API/Dockerfile
    container_name: paymentservice
    ports:
      - "5004:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
    depends_on:
      mssql:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:

volumes:
  mssql_data:
